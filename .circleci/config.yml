version: 2.1
orbs:
  jq: circleci/jq@2.2.0
  slack: circleci/slack@3.4.2
  node: circleci/node@4.2.1
jobs:
  publish:
    machine:
      image: ubuntu-2204:2024.01.1
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - checkout
      - jq/install
      - node/install
      - run:
          name: build docker image and test
          command: |
            ./test.sh
            if [[ $? -ne 0 ]]; then exit 1; fi
      - run:
          name: log in to docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: core version tag
          command: |
            CORE_VERSION=$(cat Dockerfile | grep "ARG CORE_VERSION=" | cut -d'=' -f2 | cut -d'.' -f1,2)
            git push origin :refs/tags/${CORE_VERSION}
            git fetch --prune --prune-tags
            git tag ${CORE_VERSION}
            git push origin --tags
      - run:
          name: create and push docker image for core version tag
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker buildx create --name multiarch --driver docker-container --use
            docker buildx inspect --bootstrap
            CORE_VERSION=$(cat Dockerfile | grep "ARG CORE_VERSION=" | cut -d'=' -f2 | cut -d'.' -f1,2)
            docker buildx build --platform $BUILDX_PLATFORMS -t supertokens/supertokens-postgresql:${CORE_VERSION} -o type=image,push=true .
      - run:
          name: check if is latest core and plugin
          command: |
            PLUGIN_VERSION=$(cat Dockerfile | grep "ARG PLUGIN_VERSION=" | cut -d'=' -f2)
            CORE_VERSION=$(cat Dockerfile | grep "ARG CORE_VERSION=" | cut -d'=' -f2)
            PLUGIN_NAME=$(cat Dockerfile | grep "ARG PLUGIN_NAME=" | cut -d'=' -f2)
            response=`curl -s -X GET \
              "https://api.supertokens.io/0/core/latest/check?password=$API_KEY&planType=FREE&version=$CORE_VERSION&allowDev=true" \
              -H 'api-version: 0'`
            core_response=`echo $response | jq .isLatest`
            response=`curl -s -X GET \
              "https://api.supertokens.io/0/plugin/latest/check?password=$API_KEY&planType=FREE&version=$PLUGIN_VERSION&name=$PLUGIN_NAME&allowDev=true" \
              -H 'api-version: 0'`
            plugin_response=`echo $response | jq .isLatest`
            if [[ $core_response == "true" ]] && [[ $plugin_response == "true" ]]
            then
              git push origin :refs/tags/latest
              git fetch --prune --prune-tags
              git tag latest
              git push origin --tags
              docker buildx build --platform $BUILDX_PLATFORMS -t supertokens/supertokens-postgresql:latest -o type=image,push=true .
              token=`curl --location --request POST 'https://hub.docker.com/v2/users/login/' --header 'Content-Type: application/json' --data-raw "{\"username\": \"$DOCKER_USER\", \"password\": \"$DOCKER_PASSWORD\"}" | jq .token | tr -d '"'`
              TOKEN=$token node updateReadme.js
            fi
      - slack/status
  test:
    machine:
      image: ubuntu-2204:2024.01.1
    steps:
      - checkout
      - jq/install
      - run:
          name: build docker image and test
          command: |
            ./test.sh
            if [[ $? -ne 0 ]]; then exit 1; fi
      - slack/status
workflows:
  version: 2
  tagged-build:
    jobs:
      - publish:
          context:
            - slack-notification
            - docker-hub
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - test:
          context:
            - slack-notification
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/